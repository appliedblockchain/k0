version: 2

jobs:
  build_cpp:
    docker:
      - image: appliedblockchain/snarkapps-base
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - run:
          name: Init Git submodules
          command: git submodule update --init --recursive
      - run:
          name: "Create hash of src contents"
          command: find cpp/src -type f | sort | xargs cat | md5sum > srchash.txt
      - restore_cache:
          keys:
            - zktrading-{{ checksum "srchash.txt" }}
      - run:
          name: "C++: CMake"
          command: mkdir -p cpp/build && cd cpp/build && cmake ..
      - run:
          name: "C++: Make"
          command: cd cpp/build && make
      - save_cache:
         key: zktrading-{{ checksum "srchash.txt" }}
         paths:
           - cpp/build
      - persist_to_workspace:
          root: .
          paths:
            - cpp/build/src
            - cpp/build/test
  prepare_node:
    docker:
      - image: appliedblockchain/snarkapps-base
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - run:
          name: Install npm modules
          command: cd js && npm i
      - persist_to_workspace:
          root: .
          paths:
            - js/node_modules

  run_private_trade_test:
    docker:
      - image: appliedblockchain/snarkapps-base
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
      - image: appliedblockchain/parity-solo
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Make sure npm modules are installed
          command: cd js && npm i
      - run:
          name: Setup
          command: |
            for x in commitment addition transfer withdrawal
            do
            cpp/build/src/setup ${x} 16 /tmp/zktrade_${x}_pk /tmp/zktrade_${x}_vk
            cpp/build/src/convert_vk /tmp/zktrade_${x}_vk /tmp/zktrade_${x}_vk_alt
            done
      - run:
          name: Start server
          command: |
            cpp/build/src/server 16 /tmp/zktrade_commitment_pk \
            /tmp/zktrade_commitment_vk /tmp/zktrade_addition_pk \
            /tmp/zktrade_addition_vk /tmp/zktrade_transfer_pk \
            /tmp/zktrade_transfer_vk /tmp/zktrade_withdrawal_pk \
            /tmp/zktrade_withdrawal_vk
          background: true
      - run:
          name: Run MVPPT test
          command: cd js && node_modules/.bin/mocha test/mvppt.js
      - run:
          name: Run private trade test
          command: cd js && node_modules/.bin/mocha test/private-trade.js

  fabric:
    machine:
      docker_layer_caching: true
    working_directory: ~/.go_workspace/src/github.com/appliedblockchain/zktrading
    steps:
      - checkout
      - run:
          name: "Get Fabric source code"
          command: |
            cd ~/.go_workspace/src/github.com
            mkdir hyperledger
            cd hyperledger
            curl -LO https://github.com/hyperledger/fabric/archive/v1.2.0.tar.gz
            tar xf v1.2.0.tar.gz
            mv fabric-1.2.0 fabric
            rm v1.2.0.tar.gz
      - run:
          name: "Package chaincode"
          command: |
            cd fabric/test/network
            docker run \
            -v $PWD/artefacts:/artefacts \
            -v ~/.go_workspace/src/github.com/hyperledger/fabric:/opt/gopath/src/github.com/hyperledger/fabric:ro \
            -v ~/.go_workspace/src/github.com/appliedblockchain/zktrading/fabric/chaincode:/opt/gopath/src/github.com/appliedblockchain/zktrading/fabric/chaincode:ro \
            hyperledger/fabric-tools:1.2.0 \
            peer chaincode package -n k0chaincode -v 1 -p github.com/appliedblockchain/zktrading/fabric/chaincode/cash \
            /artefacts/k0chaincode.1.out
      - run:
          name: "Spin up Fabric network"
          command: |
            cd fabric/test/network
            ./spin_up.sh
      - run:
          name: "Install chaincode"
          command: |
            cd fabric/test/network
            for org in alpha beta gamma; do docker-compose run ${org}tools peer chaincode install /artefacts/k0chaincode.1.out; done

workflows:
  version: 2
  main:
    jobs:
      - build_cpp:
          context: org-global
      - prepare_node:
          context: org-global
      - run_private_trade_test:
          context: org-global
          requires:
            - build_cpp
            - prepare_node
      - fabric
