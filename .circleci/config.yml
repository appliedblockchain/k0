version: 2

jobs:
  build_cpp_docker:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: "Get Git submodules"
          command: git submodule update --init --recursive
      - run:
          name: "Docker login"
          command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
      - run:
          name: "Build builder image"
          command: |
            cd cpp
            docker build -f docker/builder.Dockerfile -t zktrading-builder .
      - run:
          name: "Build main image"
          command: |
            cd cpp
            docker build -f docker/zktrading.Dockerfile -t zktrading .
      - run:
          name: "Build app images"
          command: |
            cd cpp
            docker build -f docker/setup.Dockerfile -t zktrading-setup .
            docker build -f docker/server.Dockerfile -t zktrading-server .
            docker build -f docker/mtserver.Dockerfile -t zktrading-mtserver .
            docker build -f docker/convert-vk.Dockerfile -t zktrading-convert-vk .
            docker build -f docker/pack_256.Dockerfile -t zktrading-pack .
            docker build -f docker/unpack_256.Dockerfile -t zktrading-unpack .
            # TODO: push images

  ethereum_integration_tests:
    machine:
      docker_layer_caching: true
    working_directory: ~/.go_workspace/src/github.com/appliedblockchain/zktrading
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Generate proving and verification keys
          command: |
            mkdir /tmp/k0keys
            for circuit in commitment transfer addition withdrawal
            do
              docker run -v /tmp/k0keys:/tmp/k0keys zktrading-setup $circuit 7 /tmp/k0keys/${circuit}_pk /tmp/k0keys/${circuit}_vk
              docker run -v /tmp/k0keys:/tmp/k0keys zktrading-convert-vk /tmp/k0keys/${circuit}_vk /tmp/k0keys/${circuit}_vk_alt
            done
      - run:
          name: "Enable NVM"
          command: |
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: Setup node 8
          command: nvm install 8 && nvm alias default 8
      - run:
          name: Install Solidity
          command: |
            if [ ! -e solc-static-linux ]; then
              wget https://github.com/ethereum/solidity/releases/download/v0.5.3/solc-static-linux && chmod +x solc-static-linux
            fi
            chmod +x solc-static-linux && sudo cp solc-static-linux /usr/bin/solc
      - run:
          name: Docker login
          command: docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
      - run:
          name: Pull parity and run the servers
          command: |
            docker pull appliedblockchain/parity-solo-instant:latest
            cd js/test/eth/network
            docker-compose up -d
      - run:
          name: init the demo state
          command: |
            cd js/demo && npm install
            node init
            node deposit alice
            node deposit bob
  # build_cpp:
  #   docker:
  #     - image: appliedblockchain/snarkapps-base
  #       auth:
  #         username: $DOCKER_USER
  #         password: $DOCKER_PASSWORD
  #   steps:
  #     - checkout
  #     - run:
  #         name: Init Git submodules
  #         command: git submodule update --init --recursive
  #     - run:
  #         name: "Create hash of src contents"
  #         command: find cpp/src -type f | sort | xargs cat | md5sum > srchash.txt
  #     - restore_cache:
  #         keys:
  #           - zktrading-{{ checksum "srchash.txt" }}
  #     - run:
  #         name: "C++: CMake"
  #         command: mkdir -p cpp/build && cd cpp/build && cmake ..
  #     - run:
  #         name: "C++: Make"
  #         command: cd cpp/build && make
  #     - save_cache:
  #        key: zktrading-{{ checksum "srchash.txt" }}
  #        paths:
  #          - cpp/build
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - cpp/build/src
  #           - cpp/build/test
  prepare_node:
    docker:
      - image: circleci/node:8.15.1-jessie
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - run:
          name: Install npm modules
          command: cd js && npm i
      - persist_to_workspace:
          root: .
          paths:
            - js/node_modules

  # run_private_trade_test:
  #   docker:
  #     - image: appliedblockchain/snarkapps-base
  #       auth:
  #         username: $DOCKER_USER
  #         password: $DOCKER_PASSWORD
  #     - image: appliedblockchain/parity-solo
  #       auth:
  #         username: $DOCKER_USER
  #         password: $DOCKER_PASSWORD
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: Make sure npm modules are installed
  #         command: cd js && npm i
  #     - run:
  #         name: Setup
  #         command: |
  #           mkdir /tmp/k0keys
  #           for x in commitment addition transfer withdrawal
  #           do
  #           cpp/build/src/setup ${x} 16 /tmp/k0keys/${x}_pk /tmp/k0keys/${x}_vk
  #           cpp/build/src/convert_vk /tmp/k0keys/${x}_vk /tmp/k0keys/${x}_vk_alt
  #           done
  #     - run:
  #         name: Start Proving server
  #         command: |
  #           cpp/build/src/server 16 /tmp/k0keys/commitment_pk \
  #           /tmp/k0keys/commitment_vk /tmp/k0keys/addition_pk \
  #           /tmp/k0keys/addition_vk /tmp/k0keys/transfer_pk \
  #           /tmp/k0keys/transfer_vk /tmp/k0keys/withdrawal_pk \
  #           /tmp/k0keys/withdrawal_vk 4000
  #         background: true
  #     - run:
  #         name: Start Merkle server
  #         command: cpp/build/src/mtserver 7 4100
  #         background: true
  #     - run:
  #         name: Run MVPPT test
  #         command: cd js && node_modules/.bin/mocha test/mvppt.js
  #     - run:
  #         name: Run private trade test
  #         command: cd js && node_modules/.bin/mocha test/private-trade.js

workflows:
  version: 2
  main:
    jobs:
      # - build_cpp:
      #     context: org-global
      - build_cpp_docker:
          context: org-global
      # - prepare_node:
      #     context: org-global
      - ethereum_integration_tests:
          context: org-global
          requires:
            - build_cpp_docker
            # - prepare_node
      # - run_private_trade_test:
      #     context: org-global
      #     requires:
      #       - build_cpp
      #       - prepare_node
