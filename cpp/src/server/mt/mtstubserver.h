/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_MTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_MTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class MTStubServer : public jsonrpc::AbstractServer<MTStubServer>
{
    public:
        MTStubServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<MTStubServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("add", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param01",jsonrpc::JSON_STRING, NULL), &MTStubServer::addI);
            this->bindAndAddMethod(jsonrpc::Procedure("element", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param01",jsonrpc::JSON_INTEGER, NULL), &MTStubServer::elementI);
            this->bindAndAddMethod(jsonrpc::Procedure("reset", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING,  NULL), &MTStubServer::resetI);
            this->bindAndAddMethod(jsonrpc::Procedure("root", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING,  NULL), &MTStubServer::rootI);
            this->bindAndAddMethod(jsonrpc::Procedure("simulateAddition", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param01",jsonrpc::JSON_STRING, NULL), &MTStubServer::simulateAdditionI);
            this->bindAndAddMethod(jsonrpc::Procedure("status", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT,  NULL), &MTStubServer::statusI);
        }

        inline virtual void addI(const Json::Value &request, Json::Value &response)
        {
            response = this->add(request[0u].asString());
        }
        inline virtual void elementI(const Json::Value &request, Json::Value &response)
        {
            response = this->element(request[0u].asInt());
        }
        inline virtual void resetI(const Json::Value &/*request*/, Json::Value &response)
        {
            response = this->reset();
        }
        inline virtual void rootI(const Json::Value &/*request*/, Json::Value &response)
        {
            response = this->root();
        }
        inline virtual void simulateAdditionI(const Json::Value &request, Json::Value &response)
        {
            response = this->simulateAddition(request[0u].asString());
        }
        inline virtual void statusI(const Json::Value &/*request*/, Json::Value &response)
        {
            response = this->status();
        }
        virtual Json::Value add(const std::string& param01) = 0;
        virtual std::string element(int param01) = 0;
        virtual std::string reset() = 0;
        virtual std::string root() = 0;
        virtual Json::Value simulateAddition(const std::string& param01) = 0;
        virtual Json::Value status() = 0;
};

#endif //JSONRPC_CPP_STUB_MTSTUBSERVER_H_
